package compute;

import java.awt.Point;
import java.util.ArrayList;

import algorithm.Jarvis;
import algorithm.Ritter;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.event.EventType;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.effect.Effect;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Polygon;
import javafx.scene.shape.StrokeLineCap;
import javafx.stage.Stage;
import tools.LoadInstance;
import tools.MathTools;

public class GraphicView extends Application {

	@Override
	public void start(Stage primaryStage) {
		
		Group root = new Group();
		
		ArrayList<Point> points = LoadInstance.readFile("samples/test-101.points");
				
		Circle circle =new Ritter().calculCercleMinRitter(points);// calcul ritter
		
		ArrayList<Point> pointsJarvis = new Jarvis().enveloppeConvexeJarvis(points);
		
		circle.setFill(Color.CORNFLOWERBLUE);
		
		
		Polygon poly  = new Polygon();
		poly.setFill(Color.BLUEVIOLET);
		poly.setStroke(Color.WHITE);
		poly.setStrokeLineCap(StrokeLineCap.SQUARE);
		poly.setStrokeWidth(4);
		
		pointsJarvis.forEach(e ->{poly.getPoints().add((double) e.x) ;poly.getPoints().add((double) e.y); });
		
		System.out.println(poly.getPoints().size());
		root.getChildren().add(poly);
		
		
		//root.getChildren().add(circle);
		root.getChildren().addAll(putPointOnScreen(points));
		Label circleArea = new Label("Area circle= "+MathTools.circleArea(circle.getRadius()));
		circleArea.setTextFill(Color.WHITE);
		root.getChildren().add(circleArea);
		
		Scene scene = new Scene(root);
		scene.setFill(Color.DARKSLATEGRAY);
		primaryStage.setTitle("---Algorithm Ritter---");
		primaryStage.setScene(scene);
		primaryStage.setHeight(600);
		primaryStage.setWidth(800);
		primaryStage.show();
		primaryStage.setOnCloseRequest(e -> Platform.exit());
	}
	
	
	public static void main(String[] args) {
		
		launch(args);
	}
	
	/*
	 * 
	 * Cette methode permet de dessiner les points
	 */
	ArrayList<Circle> putPointOnScreen(ArrayList<Point> points){
		ArrayList<Circle> result = new ArrayList<Circle>();
		
		for (Point p : points) {
			result.add(new Circle(p.x, p.y,2,Color.RED));
		}
		return result ;
		
	}

}
