package algorithm;

import java.awt.Point;
import java.util.ArrayList;

import tools.MathTools;

/**
 * 
 * @author cb_mac
 *Implementation de l'algo de Jarvis pour le calcul de l'enveloppe convexe
 */
public class Jarvis {

	 
	 
	 public ArrayList<Point> enveloppeConvexeJarvis(ArrayList<Point> points){
		 
		 if (points.size()<3) {
			 return null;
		 }
		 
		 ArrayList<Point> enveloppe = new ArrayList<Point>();
		 Point p = abscisseMin(points);
		 Point pPrime = new Point(p);
		 
		 for (Point q : points) {
			 if (p.equals(q)) continue;
			 boolean coteBleu=true;
					
			for (Point x : points) {
				if(MathTools.crossProduct(p, q, x)<0) coteBleu=false;
			}
					
			if(coteBleu==true) { //On a [PQ] sur l'enveloppe convexe
				
				boolean bolBoucle = true;
				enveloppe.add(p);
				while(bolBoucle){
					
					Point r = points.get(0);
					double angleMin = MathTools.calculAngle(p,q,q,r); //(pq,qr)
							
					for (Point rmin : points) {
						if(!rmin.equals(q)&&!rmin.equals(p)){
							if( MathTools.calculAngle(p,q,q,rmin)<angleMin) {r = rmin;angleMin=MathTools.calculAngle(p,q,q,rmin);}
						}
					}//On a trouvÃ© R
							
					if(r.equals(pPrime)) bolBoucle = false;
					enveloppe.add(q);
					enveloppe.add(r);
					p=(Point)q.clone();
					q=(Point)r.clone();
				}
				break;
			}
		}
		 return enveloppe ; 
	 }
	 
	 


	 
	 public Point abscisseMin(ArrayList<Point> points){
		 Point p=points.get(0);
		 for (Point r : points) {
			 if(r.getX()<p.getX()) p = r ;
		 }
		 return p;
	 }
	 
}
