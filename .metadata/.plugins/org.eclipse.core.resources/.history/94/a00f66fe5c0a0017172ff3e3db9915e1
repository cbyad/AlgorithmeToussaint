package algorithm;

import java.awt.Point;
import java.awt.geom.Line2D;
import java.util.ArrayList;
import java.util.Iterator;

import javafx.scene.shape.Line;
import javafx.scene.shape.Rectangle;

public class Toussaint {

	
	public  ArrayList<Line>  toussaint (ArrayList<Point> points ){
		
		ArrayList<Point> enlevoppe = Jarvis.tme2exercice6(points);
		
		ArrayList<Line> line = Jarvis.calculPairesAntipodales(enlevoppe);
		
		return Jarvis.calculPairesAntipodales(enlevoppe);
		
		
		
		
	
		
	}
	
	
	
	
	public 	Rectangle  getRectangleMin (Point p1 ,Point p2 , ArrayList<Point> enveloppe){
		
		Point p1Suiv =enveloppe.get(enveloppe.indexOf(p1)%enveloppe.size());
		
		
		int a = (p1Suiv.y-p1.y)/(p1Suiv.x-p1.x);
		
		int b = p1.y- (a*p1.x);
		
		return null ;
		
	
		
		
	}
	
	public ArrayList<Point> pointsAntiPodalCommun(Point p1 , ArrayList<Line> antipodales){
		ArrayList<Point> listePoints =  new ArrayList<>();
		
		for (Line l : antipodales) { // l (x1,x2,y1,y2)
			
			if(     ){
				
			}
		}
		
		return null ;
	}
	
	public ArrayList<Point> getPointsFromLine(ArrayList<Line> line ){
		ArrayList<Point> listePoints =  new ArrayList<>();
		
		for (Line l : line) {
				double x1 = l.getStartX();
				double y1= l.getStartY();
				double x2 = l.getEndX();
				double y2= l.getEndY();
				
			listePoints.add(new Point((int)x1,(int) y1) );
			listePoints.add(new Point((int)x2,(int)y2) );
		}
		
		return listePoints ;
		
	}
	
	
}
