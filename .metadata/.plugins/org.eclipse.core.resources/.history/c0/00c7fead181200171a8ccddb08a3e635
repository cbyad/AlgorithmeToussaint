package com.cpa.compute;

import java.awt.Point;
import java.awt.geom.Point2D;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;

import com.cpa.algorithms.Convex;
import com.cpa.algorithms.Ritter;
import com.cpa.algorithms.Toussaint;
import com.cpa.algorithms.Utils;
import com.cpa.tools.TestFilesManager;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Line;





/**
 * Cette classe cree un fichier de sorti au format csv a partir de la base Varamous
 * @author cb_mac
 *
 */
public class MainTestFichiers {

	public static void main(String[] args) throws IOException {

		String outputFileName = args[0];

		TestFilesManager tfm = TestFilesManager.getInstance();
		int i = 0;
		
		


		
		ArrayList<Point> points = null;
		ArrayList<Point> enveloppeConvex = null;
		
		Point2D.Double[] rect = null;
		Circle cercle = null;
		double ratioRect = 0, ratioCircle = 0;
		double sum = 0;
		double sumCircle = 0;
		double rectArea, hullArea, circleArea;
		BufferedWriter bw = new BufferedWriter(new FileWriter(outputFileName));
		long timeStartRectangle, timeEndRectangle;
		long timeStartCircle, timeEndCircle;
		long timeRectangle = 0, timeCircle = 0;
		while ((points = tfm.getNextFile()) != null) {
			enveloppeConvex = Convex.graham(points);
			
			timeStartRectangle = System.nanoTime();
			ArrayList<Line> paireAntiPodales = Convex.calculPairesAntipodales(enveloppeConvex) ; // paires antipodales
			rect = Toussaint.AlgorithmeRectangleMinimun(paireAntiPodales, enveloppeConvex);
			timeEndRectangle = System.nanoTime();
			
			timeStartCircle = System.nanoTime();
			cercle =Ritter.calculCercleMinRitter(points);
			timeEndCircle = System.nanoTime();
			
			circleArea = Utils.circleArea(cercle.getRadius());
			rectArea = Utils.rectangleArea(rect);
			hullArea =Utils.polygonArea(enveloppeConvex);
			
			ratioRect = rectArea / hullArea;
			ratioCircle = circleArea / hullArea;
			
			bw.write(tfm.getCurrentFileName());
			bw.write(",");
			bw.write(String.valueOf(rectArea));
			bw.write(",");
			bw.write(String.valueOf(hullArea));
			bw.write(",");
			bw.write(String.valueOf(ratioRect));
			bw.write(",");
			bw.write(String.valueOf(timeEndRectangle - timeStartRectangle));
			bw.write(",");
			bw.write(String.valueOf(ratioCircle));
			bw.write(",");
			bw.write(String.valueOf(timeEndCircle - timeStartCircle));
			bw.write("\n");
			sumCircle += ratioCircle;
			sum += ratioRect;
			timeRectangle += (timeEndRectangle - timeStartRectangle);
			timeCircle += (timeEndCircle - timeStartCircle);
			i++;
		}
		System.out.println("RECT : " + sum / i + " " + ((double) timeRectangle / i) + " ns");
		System.out.println("CIRCLE : " + sumCircle / i + " " + ((double) timeCircle / i) + " ns");
		
		bw.close();
	}

}
